// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int               @id @default(autoincrement())
  email            String            @unique
  password         String
  alias            String
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  interviewInvites InterviewInvite[]
}

model Specialty {
  id            Int       @id @default(autoincrement())
  specialtyCode String    @unique
  name          String
  programs      Program[]
}

model Institution {
  id              Int       @id @default(autoincrement())
  name            String
  institutionCode String    @unique
  programs        Program[]
}

model Program {
  id               Int               @id @default(autoincrement())
  name             String
  institutionId    Int
  specialtyId      Int
  nrmpProgramCode  String            @unique
  institution      Institution       @relation(fields: [institutionId], references: [id])
  specialty        Specialty         @relation(fields: [specialtyId], references: [id])
  interviewInvites InterviewInvite[]

  @@unique([institutionId, specialtyId, name])
}

model InterviewInvite {
  id                   Int            @id @default(autoincrement())
  anonymous            Boolean
  graduateType         GraduateType?
  img                  IMGType?
  inviteDateTime       DateTime
  geographicPreference Boolean?
  signal               Boolean?
  locationState        LocationState?
  medicalDegree        MedicalDegree?
  step1ScorePass       Boolean?
  step1Score           Int?
  step2Score           Int?
  comlex1ScorePass     Boolean?
  comlex2Score         String?
  visaRequired         Boolean?
  subI                 Boolean?
  home                 Boolean?
  yearOfGraduation     Int?
  greenCard            Boolean?
  away                 Boolean?

  userId Int
  user   User @relation(fields: [userId], references: [id])

  programId Int
  program   Program @relation(fields: [programId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum GraduateType {
  US
  IMG
}

enum IMGType {
  nonUSIMG
  USIMG
}

enum LocationState {
  IS
  OOS
}

enum MedicalDegree {
  MD
  DO
}
